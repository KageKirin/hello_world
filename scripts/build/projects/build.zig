// build.zig generated by GENie

const std = @import("std");
const builtin = @import("builtin");
const Builder = std.build.Builder;

// build modules
const mod_fmt = @import("fmt.zig");
const mod_flatglm = @import("flatglm.zig");
const mod_arguspp = @import("arguspp.zig");
const mod_argus = @import("argus.zig");
const mod_flatgltf = @import("flatgltf.zig");
const mod_ranges = @import("ranges.zig");
const mod_glm = @import("glm.zig");
const mod_catch2 = @import("catch2.zig");
const mod_incbin = @import("incbin.zig");
const mod_cgltf = @import("cgltf.zig");
const mod_stb = @import("stb.zig");
const mod_flatbuffers = @import("flatbuffers.zig");
const mod_flatc = @import("flatc.zig");
const mod_flathash = @import("flathash.zig");
const mod_badass_lon = @import("badass.lon.zig");
const mod_badass_gitrev = @import("badass.gitrev.zig");
const mod_badass_bactra_gltf = @import("badass.bactra.gltf.zig");
const mod_badass_bactra_core = @import("badass.bactra.core.zig");
const mod_badass_bactra_texture = @import("badass.bactra.texture.zig");
const mod_badass_bactra_schemas = @import("badass.bactra.schemas.zig");
const mod_badass_glm_extensions = @import("badass.glm_extensions.zig");
const mod_badass_require = @import("badass.require.zig");
const mod_bactra2gltf = @import("bactra2gltf.zig");
const mod_bactra_conv = @import("bactra_conv.zig");
const mod_avtr_bmpng = @import("avtr_bmpng.zig");
const mod_badass_require_unittest = @import("badass.require.unittest.zig");
const mod_badass_lon_unittest = @import("badass.lon.unittest.zig");
const mod_badass_bactra_unittests = @import("badass.bactra.unittests.zig");

pub fn build(b: *Builder) void {
    const target = b.standardTargetOptions(.{});
    const mode = b.standardReleaseOptions();

    // build modules
    mod_fmt.build(b, target, mode);
    mod_flatglm.build(b, target, mode);
    mod_arguspp.build(b, target, mode);
    mod_argus.build(b, target, mode);
    mod_flatgltf.build(b, target, mode);
    mod_ranges.build(b, target, mode);
    mod_glm.build(b, target, mode);
    mod_catch2.build(b, target, mode);
    mod_incbin.build(b, target, mode);
    mod_cgltf.build(b, target, mode);
    mod_stb.build(b, target, mode);
    mod_flatbuffers.build(b, target, mode);
    mod_flatc.build(b, target, mode);
    mod_flathash.build(b, target, mode);
    mod_badass_lon.build(b, target, mode);
    mod_badass_gitrev.build(b, target, mode);
    mod_badass_bactra_gltf.build(b, target, mode);
    mod_badass_bactra_core.build(b, target, mode);
    mod_badass_bactra_texture.build(b, target, mode);
    mod_badass_bactra_schemas.build(b, target, mode);
    mod_badass_glm_extensions.build(b, target, mode);
    mod_badass_require.build(b, target, mode);
    mod_bactra2gltf.build(b, target, mode);
    mod_bactra_conv.build(b, target, mode);
    mod_avtr_bmpng.build(b, target, mode);
    mod_badass_require_unittest.build(b, target, mode);
    mod_badass_lon_unittest.build(b, target, mode);
    mod_badass_bactra_unittests.build(b, target, mode);
} // build
