// badass.bactra.unittests.zig generated by GENie

const std = @import("std");
const builtin = @import("builtin");
const Builder = std.build.Builder;

pub fn build(b: *Builder, target : std.zig.CrossTarget,  mode : std.builtin.Mode) void {
    if (mode == std.builtin.Mode.Debug) {
        const prj = b.addExecutable("badass.bactra.unittests", null);
        prj.setTarget(target);
        prj.setBuildMode(mode);
        prj.setOutputDir("../../../bin/darwin");
        prj.linkLibC();
        prj.linkSystemLibrary("c");
        prj.linkLibCpp();
        prj.linkSystemLibrary("c++");
        prj.setVerboseCC(true);
        prj.setVerboseLink(true);
        prj.force_pic = true;
        prj.addIncludeDir("../../../libs/flatbuffers/flatbuffers/include");
        prj.addIncludeDir("../../../libs/flatbuffers/flatbuffers/grpc");
        prj.addIncludeDir("../../../libs/glm/glm");
        prj.addIncludeDir("../../../libs/fmt/fmt/include");
        prj.addIncludeDir("../../../libs/stb");
        prj.addIncludeDir("../../../libs/catch2/catch2/single_include");
        prj.addIncludeDir("../../../libs/ranges/ranges-v3/include");
        prj.addIncludeDir("../../../libs/incbin/incbin");
        prj.addIncludeDir("../../../src/flatglm/include");
        prj.addIncludeDir("../../../src/flatgltf/include");
        prj.addIncludeDir("../../../src/require");
        prj.addIncludeDir("../../../src/lon");
        prj.addIncludeDir("../../../src/glm_extensions");
        prj.addIncludeDir("../../../src/schemas");
        prj.addIncludeDir("../../../src");
        prj.addIncludeDir("../../../src/bactra");
        prj.addLibPath("../bin/darwin");
        prj.addFrameworkDir("../bin/darwin");
        prj.defineCMacroRaw("DEBUG");
        prj.defineCMacroRaw("_DEBUG");
        prj.defineCMacroRaw("GLM_FORCE_SWIZZLE=1");
        prj.defineCMacroRaw("CATCH_CONFIG_ENABLE_BENCHMARKING");
        prj.defineCMacroRaw("WITH_DEBUG_PRINT");
        prj.defineCMacroRaw("PLATFORM_MACOS");
        prj.addCSourceFiles(&.{
            "../../../src/tests/bactra/bactra.ascii2.ut.cpp",
            "../../../src/tests/bactra/bactra.ascii.rwr.ut.cpp",
            "../../../src/tests/bactra/main.ut.cpp",
            "../../../src/tests/bactra/bactra.ascii.partial.rwr.ut.cpp",
            "../../../src/tests/bactra/bactra.cloning.ut.cpp",
            "../../../src/tests/bactra/bactra.benchmark.ut.cpp",
            "../../../src/tests/bactra/bactra.gltf.ut.cpp",
            "../../../src/tests/bactra/assets/mannequin/mannequin_ska.cxx",
            "../../../src/tests/bactra/assets/mannequin/mannequin_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/Eyes_motion_0724_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_tops_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_head_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_body_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_bottoms_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/Eyes_motion_0724_tra.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_hair_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_acces_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/Eyes_motion_0724_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_tops_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_animation_02_tra.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_head_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_body_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_bottoms_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_animation_01_tra.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_acces_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_hair_bac.cxx",
            "../../../src/tests/bactra/assets/unisex/abody_u_tra.cxx",
            "../../../src/tests/bactra/assets/generic_humanoid/exported_by_kuroki_bac.cxx",
            "../../../src/tests/bactra/assets/generic_humanoid/exported_by_kuroki_ska.cxx",
            "../../../src/tests/bactra/assets/generic_humanoid/mobage_base_skeleton_ska.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_ska.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_original_bac.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_tra.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_bac.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_original_ska.cxx",
            "../../../src/tests/bactra/assets/male/face_m_bac.cxx",
            "../../../src/tests/bactra/assets/male/abody_m_ska.cxx",
            "../../../src/tests/bactra/assets/male/face_m_1_tra.cxx",
            "../../../src/tests/bactra/assets/male/face_m_ska.cxx",
            "../../../src/tests/bactra/assets/male/abody_m_bac.cxx",
            "../../../src/tests/bactra/assets/female/face_f_bac.cxx",
            "../../../src/tests/bactra/assets/female/abody_f_ska.cxx",
            "../../../src/tests/bactra/assets/female/face_f_1_tra.cxx",
            "../../../src/tests/bactra/assets/female/face_f_ska.cxx",
            "../../../src/tests/bactra/assets/female/abody_f_bac.cxx",
            "../../../src/tests/bactra/assets/model3/model3_patched_ska.cxx",
            "../../../src/tests/bactra/assets/model3/model3_bac.cxx",
            "../../../src/tests/bactra/assets/model3/model3_tra.cxx",
            "../../../src/tests/bactra/assets/model3/model3_patched_bac.cxx",
            "../../../src/tests/bactra/assets/model3/model3_ska.cxx",
            "../../../src/tests/bactra/assets/meliodas/cloths_u_bac.cxx",
            "../../../src/tests/bactra/assets/meliodas/hair_u_ska.cxx",
            "../../../src/tests/bactra/assets/meliodas/hair_u_tra.cxx",
            "../../../src/tests/bactra/assets/meliodas/cloths_u_ska.cxx",
            "../../../src/tests/bactra/assets/meliodas/hair_u_bac.cxx",
        },
        &.{
            "-g",
            "-Wall -Wextra",
            "-fdiagnostics-fixit-info",
            "-fdiagnostics-color",
            "-fdiagnostics-show-note-include-stack",
            "-Wextra-tokens",
            "-Wno-undef",
            "-fblocks",
            "-Rpass=inline",
        });
        prj.linkFramework("flatbuffers");
        prj.linkFramework("fmt");
        prj.linkFramework("stb");
        prj.linkFramework("incbin");
        prj.linkFramework("flatglm");
        prj.linkFramework("flatgltf");
        prj.linkFramework("badass.gitrev");
        prj.linkFramework("badass.require");
        prj.linkFramework("badass.lon");
        prj.linkFramework("badass.glm_extensions");
        prj.linkFramework("badass.bactra.gltf");
        prj.linkFramework("badass.bactra.core");
        prj.linkFramework("badass.bactra.texture");
        prj.install();
    }
    if (mode == std.builtin.Mode.ReleaseFast) {
        const prj = b.addExecutable("badass.bactra.unittests", null);
        prj.setTarget(target);
        prj.setBuildMode(mode);
        prj.setOutputDir("../../../bin/darwin");
        prj.linkLibC();
        prj.linkSystemLibrary("c");
        prj.linkLibCpp();
        prj.linkSystemLibrary("c++");
        prj.setVerboseCC(true);
        prj.setVerboseLink(true);
        prj.force_pic = true;
        prj.addIncludeDir("../../../libs/flatbuffers/flatbuffers/include");
        prj.addIncludeDir("../../../libs/flatbuffers/flatbuffers/grpc");
        prj.addIncludeDir("../../../libs/glm/glm");
        prj.addIncludeDir("../../../libs/fmt/fmt/include");
        prj.addIncludeDir("../../../libs/stb");
        prj.addIncludeDir("../../../libs/catch2/catch2/single_include");
        prj.addIncludeDir("../../../libs/ranges/ranges-v3/include");
        prj.addIncludeDir("../../../libs/incbin/incbin");
        prj.addIncludeDir("../../../src/flatglm/include");
        prj.addIncludeDir("../../../src/flatgltf/include");
        prj.addIncludeDir("../../../src/require");
        prj.addIncludeDir("../../../src/lon");
        prj.addIncludeDir("../../../src/glm_extensions");
        prj.addIncludeDir("../../../src/schemas");
        prj.addIncludeDir("../../../src");
        prj.addIncludeDir("../../../src/bactra");
        prj.addLibPath("../bin/darwin");
        prj.addFrameworkDir("../bin/darwin");
        prj.defineCMacroRaw("RELEASE");
        prj.defineCMacroRaw("NDEBUG");
        prj.defineCMacroRaw("GLM_FORCE_SWIZZLE=1");
        prj.defineCMacroRaw("CATCH_CONFIG_ENABLE_BENCHMARKING");
        prj.defineCMacroRaw("PLATFORM_MACOS");
        prj.addCSourceFiles(&.{
            "../../../src/tests/bactra/bactra.ascii2.ut.cpp",
            "../../../src/tests/bactra/bactra.ascii.rwr.ut.cpp",
            "../../../src/tests/bactra/main.ut.cpp",
            "../../../src/tests/bactra/bactra.ascii.partial.rwr.ut.cpp",
            "../../../src/tests/bactra/bactra.cloning.ut.cpp",
            "../../../src/tests/bactra/bactra.benchmark.ut.cpp",
            "../../../src/tests/bactra/bactra.gltf.ut.cpp",
            "../../../src/tests/bactra/assets/mannequin/mannequin_ska.cxx",
            "../../../src/tests/bactra/assets/mannequin/mannequin_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/Eyes_motion_0724_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_tops_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_head_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_body_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_bottoms_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/Eyes_motion_0724_tra.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_hair_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_acces_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/Eyes_motion_0724_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_tops_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_animation_02_tra.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_head_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_body_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_bottoms_ska.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_animation_01_tra.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_acces_bac.cxx",
            "../../../src/tests/bactra/assets/f_0245/f_0245_hair_bac.cxx",
            "../../../src/tests/bactra/assets/unisex/abody_u_tra.cxx",
            "../../../src/tests/bactra/assets/generic_humanoid/exported_by_kuroki_bac.cxx",
            "../../../src/tests/bactra/assets/generic_humanoid/exported_by_kuroki_ska.cxx",
            "../../../src/tests/bactra/assets/generic_humanoid/mobage_base_skeleton_ska.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_ska.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_original_bac.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_tra.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_bac.cxx",
            "../../../src/tests/bactra/assets/pet/pet_u_original_ska.cxx",
            "../../../src/tests/bactra/assets/male/face_m_bac.cxx",
            "../../../src/tests/bactra/assets/male/abody_m_ska.cxx",
            "../../../src/tests/bactra/assets/male/face_m_1_tra.cxx",
            "../../../src/tests/bactra/assets/male/face_m_ska.cxx",
            "../../../src/tests/bactra/assets/male/abody_m_bac.cxx",
            "../../../src/tests/bactra/assets/female/face_f_bac.cxx",
            "../../../src/tests/bactra/assets/female/abody_f_ska.cxx",
            "../../../src/tests/bactra/assets/female/face_f_1_tra.cxx",
            "../../../src/tests/bactra/assets/female/face_f_ska.cxx",
            "../../../src/tests/bactra/assets/female/abody_f_bac.cxx",
            "../../../src/tests/bactra/assets/model3/model3_patched_ska.cxx",
            "../../../src/tests/bactra/assets/model3/model3_bac.cxx",
            "../../../src/tests/bactra/assets/model3/model3_tra.cxx",
            "../../../src/tests/bactra/assets/model3/model3_patched_bac.cxx",
            "../../../src/tests/bactra/assets/model3/model3_ska.cxx",
            "../../../src/tests/bactra/assets/meliodas/cloths_u_bac.cxx",
            "../../../src/tests/bactra/assets/meliodas/hair_u_ska.cxx",
            "../../../src/tests/bactra/assets/meliodas/hair_u_tra.cxx",
            "../../../src/tests/bactra/assets/meliodas/cloths_u_ska.cxx",
            "../../../src/tests/bactra/assets/meliodas/hair_u_bac.cxx",
        },
        &.{
            "-Os",
            "-Wall -Wextra",
            "-fdiagnostics-fixit-info",
            "-fdiagnostics-color",
            "-fdiagnostics-show-note-include-stack",
            "-Wextra-tokens",
            "-Wno-undef",
            "-fblocks",
            "-Rpass=inline",
        });
        prj.linkFramework("flatbuffers");
        prj.linkFramework("fmt");
        prj.linkFramework("stb");
        prj.linkFramework("incbin");
        prj.linkFramework("flatglm");
        prj.linkFramework("flatgltf");
        prj.linkFramework("badass.gitrev");
        prj.linkFramework("badass.require");
        prj.linkFramework("badass.lon");
        prj.linkFramework("badass.glm_extensions");
        prj.linkFramework("badass.bactra.gltf");
        prj.linkFramework("badass.bactra.core");
        prj.linkFramework("badass.bactra.texture");
        prj.install();
    }
} // build
